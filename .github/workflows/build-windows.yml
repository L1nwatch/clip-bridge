name: Build Windows Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r utils/requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executables
      run: |
        cd utils
        pyinstaller --onefile --distpath ../dist/python-standalone server.py --name clipbridge-server.exe
        pyinstaller --onefile --distpath ../dist/python-standalone client.py --name clipbridge-client.exe
        
    - name: Create standalone directory if not exists
      run: |
        if (!(Test-Path "dist/python-standalone")) { New-Item -ItemType Directory -Path "dist/python-standalone" }
        
    - name: List built executables
      run: |
        Get-ChildItem -Path "dist/python-standalone/" -Force
        
    - name: Verify executables
      run: |
        # Verify that the executables exist and check their properties
        if (Test-Path "dist/python-standalone/clipbridge-server.exe") {
          $serverFile = Get-Item "dist/python-standalone/clipbridge-server.exe"
          $serverSize = [math]::Round($serverFile.Length/1MB, 2)
          Write-Host "✅ clipbridge-server.exe exists (Size: ${serverSize} MB)"
        } else {
          Write-Host "❌ clipbridge-server.exe not found"
          exit 1
        }
        
        if (Test-Path "dist/python-standalone/clipbridge-client.exe") {
          $clientFile = Get-Item "dist/python-standalone/clipbridge-client.exe"
          $clientSize = [math]::Round($clientFile.Length/1MB, 2)
          Write-Host "✅ clipbridge-client.exe exists (Size: ${clientSize} MB)"
        } else {
          Write-Host "❌ clipbridge-client.exe not found"
          exit 1
        }
        
        # Verify these are Windows PE executables (check for MZ header)
        $serverBytes = [System.IO.File]::ReadAllBytes("dist/python-standalone/clipbridge-server.exe")
        $clientBytes = [System.IO.File]::ReadAllBytes("dist/python-standalone/clipbridge-client.exe")
        
        if ($serverBytes[0] -eq 0x4D -and $serverBytes[1] -eq 0x5A) {
          Write-Host "✅ clipbridge-server.exe has valid PE header"
        } else {
          Write-Host "❌ clipbridge-server.exe is not a valid Windows executable"
          exit 1
        }
        
        if ($clientBytes[0] -eq 0x4D -and $clientBytes[1] -eq 0x5A) {
          Write-Host "✅ clipbridge-client.exe has valid PE header"
        } else {
          Write-Host "❌ clipbridge-client.exe is not a valid Windows executable"
          exit 1
        }
        
    - name: Upload Windows executables
      uses: actions/upload-artifact@v4
      with:
        name: windows-executables
        path: |
          dist/python-standalone/clipbridge-server.exe
          dist/python-standalone/clipbridge-client.exe
        retention-days: 30
        
    - name: Create release assets (on main branch)
      if: github.ref == 'refs/heads/main'
      run: |
        # Create a zip file with the executables
        Compress-Archive -Path "dist/python-standalone/clipbridge-server.exe", "dist/python-standalone/clipbridge-client.exe" -DestinationPath "windows-executables.zip"
        
    - name: Upload release assets
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: windows-executables-zip
        path: windows-executables.zip
        retention-days: 90
