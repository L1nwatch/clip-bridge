name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r utils/requirements.txt
    
    - name: Run Python tests with pytest
      run: |
        cd utils
        python -m pytest tests/ -v --tb=short --cov=. --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.9'
      with:
        file: utils/coverage.xml
        flags: python
        name: python-coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: python-test-results-${{ matrix.python-version }}
        path: |
          utils/coverage.xml
          utils/htmlcov/
        retention-days: 30

  react-tests:
    name: React Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Run React tests
      run: npm run test:coverage
      env:
        CI: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: react
        name: react-coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-test-results
        path: |
          coverage/
        retention-days: 30

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Python linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Check Python code formatting with Black
      run: |
        black --check utils/*.py
    
    - name: Lint Python with flake8
      run: |
        flake8 utils/*.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 utils/*.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Lint JavaScript/React with ESLint
      run: npm run lint

  electron-build:
    name: Electron Build Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Build Electron app
      run: npm run build
      env:
        CI: true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-build
        path: build/
        retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [python-tests, react-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r utils/requirements.txt
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Run Python integration tests
      run: |
        cd utils
        python -m pytest tests/test_integration.py -v --tb=short
    
    - name: Build React app for integration
      run: npm run build
      env:
        CI: true
