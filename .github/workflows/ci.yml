name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r utils/requirements.txt
    
    - name: Run tests
      run: |
        cd utils
        python test_clipboard_bridge.py
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: utils/test-*.log
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    
    - name: Check code formatting with Black
      run: |
        black --check utils/
    
    - name: Lint with flake8
      run: |
        flake8 utils/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 utils/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  electron-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Build Electron app
      run: npm run build
      env:
        CI: true
